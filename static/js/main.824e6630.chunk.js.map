{"version":3,"sources":["Form.js","FilterButton.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","e","preventDefault","alert","className","htmlFor","type","id","name","autoComplete","FilterButton","aria-pressed","Todo","defaultChecked","completed","App","taskList","tasks","map","task","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iJA4BeA,MA1Bf,SAAcC,GAKZ,OACE,uBAAMC,SALN,SAAsBC,GAClBA,EAAEC,iBACFC,MAAM,kBAGV,UACE,oBAAIC,UAAU,gBAAd,SACE,uBAAOC,QAAQ,iBAAiBD,UAAU,YAA1C,sCAIF,uBACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVI,KAAK,OACLC,aAAa,QAEf,wBAAQH,KAAK,SAASF,UAAU,2BAAhC,qBCTSM,MAVf,SAAsBX,GACpB,OACE,yBAAQO,KAAK,SAASF,UAAU,iBAAiBO,eAAa,OAA9D,UACE,sBAAMP,UAAU,kBAAhB,mBACA,wCACA,sBAAMA,UAAU,kBAAhB,wBCJS,SAASQ,EAAKb,GACzB,OACE,qBAAIK,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACN,uBAAOG,GAAIR,EAAMQ,GAAID,KAAK,WAAWO,eAAgBd,EAAMe,YAC3D,uBAAOV,UAAU,aAAaC,QAASN,EAAMQ,GAA7C,SACGR,EAAMS,UAGH,sBAAKJ,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,SAAmCL,EAAMS,UAEhD,yBAAQF,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,SAAmCL,EAAMS,gBCkB7CO,MA9Bf,SAAahB,GACX,IAAMiB,EAAWjB,EAAMkB,MAAMC,KAAI,SAAAC,GAAI,OACnC,cAACP,EAAD,CACIL,GAAIY,EAAKZ,GACTC,KAAMW,EAAKX,KACXM,UAAWK,EAAKL,WACXK,EAAKZ,OAIhB,OACE,sBAAKH,UAAU,sBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,oCAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,oBAAIG,GAAG,eAAP,+BACA,oBACEa,KAAK,OACLhB,UAAU,wCACViB,kBAAgB,eAHlB,SAKGL,QCjBMM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OAAO,cAAC,EAAD,CAAKf,MANR,CACX,CAAEV,GAAI,SAAUC,KAAM,MAAOM,WAAW,GACxC,CAAEP,GAAI,SAAUC,KAAM,QAASM,WAAW,GAC1C,CAAEP,GAAI,SAAUC,KAAM,SAAUM,WAAW,MAGPmB,SAASC,eAAe,SAK9DZ,K","file":"static/js/main.824e6630.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Form(props) {\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        alert('Hello, world!');\r\n      }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>all </span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React from \"react\";\r\n\r\n\r\nexport default function Todo(props) {\r\n    return (\r\n      <li className=\"todo stack-small\">\r\n        <div className=\"c-cb\">\r\n  <input id={props.id} type=\"checkbox\" defaultChecked={props.completed} />\r\n  <label className=\"todo-label\" htmlFor={props.id}>\r\n    {props.name}\r\n  </label>\r\n</div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn\">\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn__danger\">\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n","import React from \"react\";\nimport Form from \"./Form\";\nimport FilterButton from \"./FilterButton\";\nimport Todo from \"./Todo\";\n\nfunction App(props) {\n  const taskList = props.tasks.map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n      />\n    )\n  );\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">3 tasks remaining</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}